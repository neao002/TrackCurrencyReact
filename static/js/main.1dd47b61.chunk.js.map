{"version":3,"sources":["Components/TrackForm.js","Components/GettingInfo.js","App.js","reportWebVitals.js","index.js"],"names":["TrackForm","name","image","symbol","price","volume","src","alt","toLocaleString","Hello","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","console","log","catch","error","filteredCoins","filter","coin","toLowerCase","includes","className","action","onChange","e","target","value","type","placeholder","map","current_price","market_cap","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAkBeA,EAhBG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC/C,OACE,8BACE,8BACE,gCACE,qBAAKC,IAAKJ,EAAOK,IAAI,iBACrB,6BAAKN,IACL,4BAAIE,IACJ,4BAAIC,IACJ,4BAAIC,EAAOG,2BC4CNC,MAlDf,WAAkB,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,OAEaF,mBAAS,IAFtB,mBAERG,EAFQ,KAEAC,EAFA,KAGfC,qBAAU,WACRC,IACGC,IACC,+GAEDC,MAAK,SAACC,GACLP,EAASO,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,SAEjBG,OAAM,SAACC,GAAD,OAAWH,QAAQC,IAAIE,QAC/B,IAEH,IAIMC,EAAgBd,EAAMe,QAAO,SAACC,GAAD,OACjCA,EAAK1B,KAAK2B,cAAcC,SAAShB,EAAOe,kBAE1C,OACE,8BACE,sBAAKE,UAAU,cAAf,UACE,mDACA,uBAAMC,OAAO,OAAb,UACE,uBACEC,SAbS,SAACC,GAClBnB,EAAUmB,EAAEC,OAAOC,QAaXC,KAAK,SACLC,YAAY,gBAEbZ,EAAca,KAAI,SAACX,GAClB,OACE,cAAC,EAAD,CAEE1B,KAAM0B,EAAK1B,KACXG,MAAOuB,EAAKY,cACZrC,MAAOyB,EAAKzB,MACZG,OAAQsB,EAAKa,WACbrC,OAAQwB,EAAKxB,QALRwB,EAAKc,gBC5BXC,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCKSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1dd47b61.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TrackForm = ({ name, image, symbol, price, volume }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <img src={image} alt=\"imagesCrypto\" />\r\n          <h1>{name}</h1>\r\n          <p>{symbol}</p>\r\n          <p>{price}</p>\r\n          <p>{volume.toLocaleString()}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackForm;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport TrackForm from \"./TrackForm\";\r\n\r\nfunction Hello() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&page=1&sparkline=false\"\r\n      )\r\n      .then((res) => {\r\n        setCoins(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const showMyData = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const filteredCoins = coins.filter((coin) =>\r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  return (\r\n    <div>\r\n      <div className=\"coin-search\">\r\n        <h1>Search a Currency</h1>\r\n        <form action=\"text\">\r\n          <input\r\n            onChange={showMyData}\r\n            type=\"search\"\r\n            placeholder=\"search here\"\r\n          />\r\n          {filteredCoins.map((coin) => {\r\n            return (\r\n              <TrackForm\r\n                key={coin.id}\r\n                name={coin.name}\r\n                price={coin.current_price}\r\n                image={coin.image}\r\n                volume={coin.market_cap}\r\n                symbol={coin.symbol}\r\n              />\r\n            );\r\n          })}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hello;\r\n","import \"./App.css\";\n\nimport Hello from \"./Components/GettingInfo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Hello></Hello>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}